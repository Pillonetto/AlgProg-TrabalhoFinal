/* Inicializa��o do jogo
Organizar em fun��es ap�s criar o sistema de n�veis */
                if (IsKeyPressed(KEY_R)) jogoInit = false; // teste

                if (!jogoInit)
                {
                    CarregaMapa(&mapa, 1);
                    for (i = 0; i < N_BG; i++) {
                        bg[i].x = -bg[i].textura.width/2;
                        bg[i].y = 0;
                    }
                    player.render = (Rectangle){.width = TAM_TILES,
                                                .height = TAM_TILES,
                                                .x = (player.x * TAM_TILES),
                                                .y = (player.y * TAM_TILES)};
                    player.x = 6;
                    player.y = 6;
                    player.vidas = 3;
                    player.pontos = 0;
                    //Setar como 0 a cada inicio de fase
                    player.chave = 0;
                    player.render.x = player.x * TAM_TILES;
                    player.render.y = player.y * TAM_TILES;
                    UnloadRenderTexture(render);
                    render = LoadRenderTexture(TAM_TILES*mapa.colunas, TAM_TILES*mapa.linhas + TAM_BARRA);
                    renderDest.width = render.texture.width*SCALE;
                    renderDest.height = render.texture.height*SCALE;
                    renderSource.width = render.texture.width;
                    renderSource.height = -render.texture.height;
                    jogoInit = true;
                }
                DesenhaFundoJogo(bg, TAM_TILES*mapa.linhas, player);
                Jogo(&mapa, tileset, &player, frames, &caixa, &caixasAbertas, caixas, &explosao, &renderPos, itens);
                break;

void inicializaBg (Background *bg) {

    for (i = 0; i < N_BG; i++) {
        bg[i]->x = -bg[i]->textura.width/2;
        bg[i]->y = 0;
    }
}

void inicializaPlayer(Player *player){

    player->render = (Rectangle){.width = TAM_TILES,
                            .height = TAM_TILES,
                            .x = (player->x * TAM_TILES),
                            .y = (player->y * TAM_TILES)};
    player->x = 6;
    player->y = 6;
    player->vidas = 3;
    player->pontos = 0;

    player->render.x = player->x * TAM_TILES;
    player->render.y = player->y * TAM_TILES;

}

void inicializaRender (RenderTexture2D *render, Rectangle *renderDest, Rectangle *renderSource, Mapa mapa){

    UnloadRenderTexture(render);
    *render = LoadRenderTexture(TAM_TILES*mapa.colunas, TAM_TILES*mapa.linhas + TAM_BARRA);
    renderDest->width = render->texture.width*SCALE;
    renderDest->height = render->texture.height*SCALE;
    renderSource->width = render->texture.width;
    renderSource->height = -render->texture.height;


}

if (!jogoInit){

    inicializaBg(&bg);

    inicializaPlayer(&player);

    inicializaRender(&render, &renderDest, &renderSource, mapa);

    jogoInit = true;
}

while(player.vidas > 0 && !mapa.fim){

    //Inicializacao da fase
    if(!mapaInit){

        //mapa e numero da fase atual
        inicializaMapa(&mapa, 1);
        player->chave = 0;

    }



    //Essas funcoes sao as mesmas pra todas as fases
    DesenhaFundoJogo(bg, TAM_TILES*mapa.linhas, player);
    //Jogo roda ate alterar player encontrar chave e interagir com o fim da fase (esse controle esta na movimentoVertical)
    Jogo(&mapa, tileset, &player, frames, &caixa, &caixasAbertas, caixas, &explosao, &renderPos, itens);
}

//Na quebra de loop alterar telaAtual?

void inicializaMapa (Mapa *mapa, int fase){

    carregaMapa(mapa, fase);

}

----------------------------------------------

06/09

-> Inicializacao do jogo
    Mapa (carregaMapa + fase)
    Background (Constante em todas as fases)
    Player (SOMENTE INICIALIZADO UMA VEZ; Deve estar fora da inicializacao de cada fase)
        Campos alterados a cada nova fase: Chave;
    Render
<- Jogo Inicializado.

-> DesenhaFundoJogo
    Constante em todas as fases
<- Background

-> Funcao em loop Jogo
    Controle da interação do player com o jogo
        Atualização de vidas, pontos e chave.
    É A MESMA EM TODAS AS FASES. PARAMETROS SAO OS MESMOS
<-



